apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "pl.com.ameryka.aplikacja"
        minSdkVersion 17
        targetSdkVersion 29
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "pl"
        vectorDrawables.useSupportLibrary = true
        versionCode 110100
        versionName "1.1.0"
        setProperty("archivesBaseName", "amerykaszpital-porady-$versionName")
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.google.firebase:firebase-firestore:20.1.0'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'
    implementation 'com.google.firebase:firebase-auth:18.0.0'
    implementation 'com.google.firebase:firebase-functions:17.0.0'
    implementation 'com.google.firebase:firebase-dynamic-links:18.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.mukeshsolanki:MarkdownView-Android:1.0.8'
    implementation 'com.jakewharton.timber:timber:4.7.1'



    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.google.dagger:dagger-android:2.22'
    implementation 'com.google.dagger:dagger-android-support:2.22'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.22'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.22'

    // api 'com.google.android.material:material:1.1.0-alpha06'

}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}

task copyReadmeToAssets(type: Copy) {
    from file("../README.md")
    into file("src/main/assets/")
}
preBuild.dependsOn(copyReadmeToAssets)

apply plugin: "com.diffplug.gradle.spotless"
spotless {
    java {
        target '**/*.java'
        googleJavaFormat()
        licenseHeaderFile('../misc/license-header-java.template.txt').yearSeparator(', ')
    }
    format 'xml', {
        target fileTree('.') {
            include '**/*.xml', '**/*.xsd'
            exclude '**/build/**'
        }
        eclipseWtp('xml').configFile '../misc/org.eclipse.wst.xml.core.prefs'
    }
}

apply plugin: 'com.google.gms.google-services'
